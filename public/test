"use client";

import Image from "next/image";
import Link from "next/link";
import logo from "@/public/images/casaeventlogo.png";
import { useState, useEffect } from "react";
import { Button } from "@/components/ui/button";
import { getAuth, onAuthStateChanged, signOut } from "firebase/auth";
import { app } from "@/lib/firebase";

export default function EventDetail() {
  const [user, setUser] = useState(null);
  const auth = getAuth(app);

  useEffect(() => {
    const unsubscribe = onAuthStateChanged(auth, (firebaseUser) => {
      setUser(firebaseUser);
    });
    return () => unsubscribe();
  }, [auth]);

  const event = {
    id: "rema2025",
    name: "Rema World Tour 2025",
    description:
      "Pour la première fois au Maroc, le superstar nigérian Rema en concert exceptionnel à Casablanca. Ambiance garantie au Morocco Mall !",
    eventDate: "2025-06-13T21:00:00Z",
    location: "Morocco Mall",
    price: 400,
    imageUrl: "/images/Rema-panorama.png",
    posterUrl: "/images/rema.jpg",
    availability: { totalTickets: 1000, purchasedCount: 200 },
  };

  const tickets = [
    {
      key: "standard",
      title: "Standard Pass",
      price: 400,
      desc: event.location,
      date: "13 juin 2025 à 21:00",
      details: "Ouverture des portes 19:00",
      img: event.posterUrl,
    },
    {
      key: "golden",
      title: "Golden Access",
      price: 800,
      desc: event.location,
      date: "13 juin 2025 à 21:00",
      details: "Ouverture des portes 19:00",
      img: event.posterUrl,
    },
    {
      key: "vip",
      title: "VIP Experience",
      price: 1800,
      desc: event.location,
      date: "13 juin 2025 à 21:00",
      details: "Ouverture des portes 19:00",
      img: event.posterUrl,
    },
  ];

  const [ticketsCount, setTicketsCount] = useState<Record<string, number>>({
    standard: 0,
    golden: 0,
    vip: 0,
  });

  const increment = (key: string) => {
    setTicketsCount((prev) => ({ ...prev, [key]: prev[key] + 1 }));
  };

  const decrement = (key: string) => {
    setTicketsCount((prev) => ({
      ...prev,
      [key]: prev[key] > 0 ? prev[key] - 1 : 0,
    }));
  };

  return (
    <main className="min-h-screen bg-gray-50 font-sans text-gray-900">
      <header className="sticky top-0 bg-white shadow z-50">
        <div className="max-w-7xl mx-auto flex items-center justify-between px-6 py-4">
          <Link href="/" className="flex items-center gap-3">
            <Image src={logo} alt="Cas@Event Logo" width={48} height={48} />
            <span className="text-2xl font-extrabold text-[#FF5A1F] tracking-wide">
              Cas@Event
            </span>
          </Link>

          <nav className="hidden md:flex space-x-8 font-semibold text-gray-700">
            <Link href="/" className="hover:text-[#FF5A1F] transition">
              Accueil
            </Link>
            <Link href="#" className="hover:text-[#FF5A1F] transition">
              Événements
            </Link>
            <Link href="#" className="hover:text-[#FF5A1F] transition">
              Activités
            </Link>
            <Link href="#" className="hover:text-[#FF5A1F] transition">
              Restaurants
            </Link>
            <Link href="#" className="hover:text-[#FF5A1F] transition">
              Réservations
            </Link>
          </nav>

          <div>
            {user ? (
              <Button
                onClick={() => signOut(auth)}
                className="bg-red-600 px-5 py-2 rounded-md font-semibold text-white hover:bg-red-700 transition"
              >
                Déconnexion
              </Button>
            ) : (
              <Link href="/login">
                <Button className="bg-[#FF5A1F] px-5 py-2 rounded-md font-semibold text-white hover:bg-[#e55313] transition">
                  Connexion
                </Button>
              </Link>
            )}
          </div>
        </div>
      </header>

      {/* SECTION HERO */}
      <section className="relative bg-white max-w-7xl mx-auto mt-8 rounded-lg overflow-hidden shadow-lg flex flex-col md:flex-row">
        <div className="relative md:flex-1 h-64 md:h-auto">
          <Image src={event.imageUrl} alt={event.name} fill className="object-cover" priority />
        </div>
        <div className="md:flex-1 p-8 flex flex-col justify-center">
          <h1 className="text-4xl font-bold text-[#FF5A1F] mb-4">{event.name}</h1>
          <p className="text-gray-700 mb-6 leading-relaxed">{event.description}</p>
          <div className="grid grid-cols-2 gap-4 text-gray-700 font-medium">
            <div>
              <span className="block text-sm uppercase text-gray-400 mb-1">Date</span>
              {new Date(event.eventDate).toLocaleString("fr-FR", {
                day: "numeric",
                month: "long",
                year: "numeric",
                hour: "2-digit",
                minute: "2-digit",
              })}
            </div>
            <div>
              <span className="block text-sm uppercase text-gray-400 mb-1">Lieu</span>
              {event.location}
            </div>
            <div>
              <span className="block text-sm uppercase text-gray-400 mb-1">Prix à partir de</span>
              <span className="text-xl font-semibold text-[#FF5A1F]">
                {event.price.toLocaleString("fr-FR")} MAD
              </span>
            </div>
            <div>
              <span className="block text-sm uppercase text-gray-400 mb-1">Places restantes</span>
              <span className="font-semibold">
                {event.availability.totalTickets - event.availability.purchasedCount} /{" "}
                {event.availability.totalTickets}
              </span>
            </div>
          </div>
        </div>
      </section>

      {/* SECTION TICKETS */}
      <section className="max-w-7xl mx-auto mt-12 px-6">
        <h2 className="text-3xl font-bold text-center text-[#FF5A1F] mb-10">
          Choisissez vos billets
        </h2>

        <div className="grid md:grid-cols-3 gap-8">
          {tickets.map(({ key, title, price, desc, date, details, img }) => (
            <div key={key} className="bg-white rounded-lg shadow-md p-6 flex flex-col">
              <div className="relative w-full h-40 rounded-md overflow-hidden mb-4">
                <Image src={img} alt={title} fill className="object-cover" />
              </div>
              <h3 className="text-xl font-semibold mb-1">{title}</h3>
              <p className="text-gray-500 text-sm mb-2">{desc}</p>
              <p className="text-gray-500 text-sm mb-2">{date}</p>
              <p className="text-gray-400 text-sm mb-4">{details}</p>
              <div className="flex items-center justify-between">
                <span className="text-[#FF5A1F] font-bold text-lg">
                  {price.toLocaleString("fr-FR")} MAD
                </span>
                <div className="flex items-center space-x-3">
                  <button
                    onClick={() => decrement(key)}
                    className="bg-gray-200 text-gray-700 px-3 py-1 rounded hover:bg-gray-300 transition"
                  >
                    −
                  </button>
                  <span className="w-6 text-center font-semibold">{ticketsCount[key]}</span>
                  <button
                    onClick={() => increment(key)}
                    className="bg-[#FF5A1F] text-white px-3 py-1 rounded hover:bg-[#e55313] transition"
                  >
                    +
                  </button>
                </div>
              </div>
            </div>
          ))}
        </div>

        {/* ACHAT */}
        <div className="max-w-md mx-auto mt-10">
          {!user ? (
            <Link href="/login">
              <Button className="w-full bg-gradient-to-r from-blue-600 to-blue-800 hover:from-blue-700 hover:to-blue-900 text-white font-semibold py-3 rounded-lg shadow-lg transition">
                Connectez-vous pour acheter vos billets
              </Button>
            </Link>
          ) : (
            <Button
              className="w-full bg-[#FF5A1F] text-white font-bold py-3 rounded-lg shadow-lg hover:bg-[#e55313] transition"
              onClick={() =>
                alert(`Achat simulé : ${JSON.stringify(ticketsCount, null, 2)} billets`)
              }
              disabled={Object.values(ticketsCount).reduce((a, b) => a + b, 0) === 0}
            >
              Acheter maintenant
            </Button>
          )}
        </div>
      </section>
    </main>
  );
}
